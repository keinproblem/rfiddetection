package nurapi;

import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

/**
 * Module's autotune setup. Supported from FW 5.0-A in L2 module.
 * <br>
 *
 * <br>
 *
 * @sa AUTOTUNE_MODE_ENABLE, AUTOTUNE_MODE_THRESHOLD_ENABLE<br>
 * <i>native declaration : nur_sdk-master\native\include\NurAPI.h:280</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("NurApi")
public class NUR_AUTOTUNE_SETUP extends StructObject {
    static {
        BridJ.register();
    }

    public NUR_AUTOTUNE_SETUP() {
        super();
    }

    public NUR_AUTOTUNE_SETUP(Pointer pointer) {
        super(pointer);
    }

    /**
     * < Autotune mode setting, bits: @sa AUTOTUNE_MODE_ENABLE, AUTOTUNE_MODE_THRESHOLD_ENABLE.
     */
    @Field(0)
    public byte mode() {
        return this.io.getByteField(this, 0);
    }

    /**
     * < Autotune mode setting, bits: @sa AUTOTUNE_MODE_ENABLE, AUTOTUNE_MODE_THRESHOLD_ENABLE.
     */
    @Field(0)
    public NUR_AUTOTUNE_SETUP mode(byte mode) {
        this.io.setByteField(this, 0, mode);
        return this;
    }

    /**
     * < Low level threshold in dBm. Do autotune if current reflected power worse than 'threshold_dBm'
     */
    @Field(1)
    public byte threshold_dBm() {
        return this.io.getByteField(this, 1);
    }

    /**
     * < Low level threshold in dBm. Do autotune if current reflected power worse than 'threshold_dBm'
     */
    @Field(1)
    public NUR_AUTOTUNE_SETUP threshold_dBm(byte threshold_dBm) {
        this.io.setByteField(this, 1, threshold_dBm);
        return this;
    }
}
