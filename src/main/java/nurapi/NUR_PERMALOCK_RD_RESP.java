package nurapi;

import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

/**
 * Contains permalock command response when the lock status is read.
 * <br>
 *
 * @sa NurApiPermalock, NurApiPermalockByEPC, NurApiPermalockSingulated<br>
 * <i>native declaration : nur_sdk-master\native\include\NurAPI.h:582</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("NurApi")
public class NUR_PERMALOCK_RD_RESP extends StructObject {
    static {
        BridJ.register();
    }

    public NUR_PERMALOCK_RD_RESP() {
        super();
    }

    public NUR_PERMALOCK_RD_RESP(Pointer pointer) {
        super(pointer);
    }

    /**
     * < From bank
     */
    @Field(0)
    public int bank() {
        return this.io.getIntField(this, 0);
    }

    /**
     * < From bank
     */
    @Field(0)
    public NUR_PERMALOCK_RD_RESP bank(int bank) {
        this.io.setIntField(this, 0, bank);
        return this;
    }

    /**
     * < First block chunk address.
     */
    @Field(1)
    public int start() {
        return this.io.getIntField(this, 1);
    }

    /**
     * < First block chunk address.
     */
    @Field(1)
    public NUR_PERMALOCK_RD_RESP start(int start) {
        this.io.setIntField(this, 1, start);
        return this;
    }

    /**
     * < Number of 16-words actually that the  tag actually responded with.
     */
    @Field(2)
    public int nBlocks() {
        return this.io.getIntField(this, 2);
    }

    /**
     * < Number of 16-words actually that the  tag actually responded with.
     */
    @Field(2)
    public NUR_PERMALOCK_RD_RESP nBlocks(int nBlocks) {
        this.io.setIntField(this, 2, nBlocks);
        return this;
    }

    /**
     * < Plain data from the tag. Note that the most significant bit (0x8000 as a 16-bit value) in this case is always the first one in the chuck of blocks (0...15, 16...31, ...).<br>
     * C type : WORD[255]
     */
    @Array({255})
    @Field(3)
    public Pointer<Short> lockStates() {
        return this.io.getPointerField(this, 3);
    }
}
