package nurapi;

import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

/**
 * Data sent with notification NUR_NOTIFICATION_PERIODIC_INVENTORY.
 * <br>
 *
 * @sa NurApiSetNotificationCallback(), NUR_NOTIFICATION_PERIODIC_INVENTORY, enum NUR_NOTIFICATION<br>
 * <i>native declaration : nur_sdk-master\native\include\NurAPI.h:67</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("NurApi")
public class NUR_PERIODIC_INVENTORY_DATA extends StructObject {
    static {
        BridJ.register();
    }

    public NUR_PERIODIC_INVENTORY_DATA() {
        super();
    }

    public NUR_PERIODIC_INVENTORY_DATA(Pointer pointer) {
        super(pointer);
    }

    /**
     * < Number of tags found
     */
    @Field(0)
    public int numTagsFound() {
        return this.io.getIntField(this, 0);
    }

    /**
     * < Number of tags found
     */
    @Field(0)
    public NUR_PERIODIC_INVENTORY_DATA numTagsFound(int numTagsFound) {
        this.io.setIntField(this, 0, numTagsFound);
        return this;
    }

    /**
     * < Number of tags in NUR module memory
     */
    @Field(1)
    public int numTagsMem() {
        return this.io.getIntField(this, 1);
    }

    /**
     * < Number of tags in NUR module memory
     */
    @Field(1)
    public NUR_PERIODIC_INVENTORY_DATA numTagsMem(int numTagsMem) {
        this.io.setIntField(this, 1, numTagsMem);
        return this;
    }

    /**
     * < Number of full Q rounds done in this inventory
     */
    @Field(2)
    public int roundsDone() {
        return this.io.getIntField(this, 2);
    }

    /**
     * < Number of full Q rounds done in this inventory
     */
    @Field(2)
    public NUR_PERIODIC_INVENTORY_DATA roundsDone(int roundsDone) {
        this.io.setIntField(this, 2, roundsDone);
        return this;
    }

    /**
     * < Number of possible collisions or reception errors in this inventory
     */
    @Field(3)
    public int collisions() {
        return this.io.getIntField(this, 3);
    }

    /**
     * < Number of possible collisions or reception errors in this inventory
     */
    @Field(3)
    public NUR_PERIODIC_INVENTORY_DATA collisions(int collisions) {
        this.io.setIntField(this, 3, collisions);
        return this;
    }

    /**
     * < Q used in this inventory
     */
    @Field(4)
    public int Q() {
        return this.io.getIntField(this, 4);
    }

    /**
     * < Q used in this inventory
     */
    @Field(4)
    public NUR_PERIODIC_INVENTORY_DATA Q(int Q) {
        this.io.setIntField(this, 4, Q);
        return this;
    }

    /**
     * < Error code returned from inventory round
     */
    @Field(5)
    public int error() {
        return this.io.getIntField(this, 5);
    }

    /**
     * < Error code returned from inventory round
     */
    @Field(5)
    public NUR_PERIODIC_INVENTORY_DATA error(int error) {
        this.io.setIntField(this, 5, error);
        return this;
    }
}
