package nurapi;

import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

/**
 * Data sent with notification NUR_NOTIFICATION_IOCHANGE.
 * <br>
 *
 * @sa NUR_NOTIFICATION_IOCHANGE, enum NUR_NOTIFICATION<br>
 * <i>native declaration : nur_sdk-master\native\include\NurAPI.h:96</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("NurApi")
public class NUR_IOCHANGE_DATA extends StructObject {
    static {
        BridJ.register();
    }

    public NUR_IOCHANGE_DATA() {
        super();
    }

    public NUR_IOCHANGE_DATA(Pointer pointer) {
        super(pointer);
    }

    /**
     * < TRUE if notification source is sensor, otherwise FALSE and source is GPIO.
     */
    @Field(0)
    public int sensor() {
        return this.io.getIntField(this, 0);
    }

    /**
     * < TRUE if notification source is sensor, otherwise FALSE and source is GPIO.
     */
    @Field(0)
    public NUR_IOCHANGE_DATA sensor(int sensor) {
        this.io.setIntField(this, 0, sensor);
        return this;
    }

    /**
     * < Sensor/GPIO source number.
     */
    @Field(1)
    public int source() {
        return this.io.getIntField(this, 1);
    }

    /**
     * < Sensor/GPIO source number.
     */
    @Field(1)
    public NUR_IOCHANGE_DATA source(int source) {
        this.io.setIntField(this, 1, source);
        return this;
    }

    /**
     * < IO change direction; 1 = Low to high transition (Rising edge), 0 = High to low transition (Falling edge).
     */
    @Field(2)
    public int dir() {
        return this.io.getIntField(this, 2);
    }

    /**
     * < IO change direction; 1 = Low to high transition (Rising edge), 0 = High to low transition (Falling edge).
     */
    @Field(2)
    public NUR_IOCHANGE_DATA dir(int dir) {
        this.io.setIntField(this, 2, dir);
        return this;
    }
}
