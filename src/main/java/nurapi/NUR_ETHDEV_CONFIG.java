package nurapi;

import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

/**
 * Sampo Ethernet device configuration parameters.
 * <br>
 *
 * @sa NurApiGetEthConfig(), NurApiSetEthConfig()<br>
 * <i>native declaration : nur_sdk-master\native\include\NurAPI.h:437</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("NurApi")
public class NUR_ETHDEV_CONFIG extends StructObject {
    static {
        BridJ.register();
    }

    public NUR_ETHDEV_CONFIG() {
        super();
    }

    public NUR_ETHDEV_CONFIG(Pointer pointer) {
        super(pointer);
    }

    @Field(0)
    public byte transport() {
        return this.io.getByteField(this, 0);
    }

    @Field(0)
    public NUR_ETHDEV_CONFIG transport(byte transport) {
        this.io.setByteField(this, 0, transport);
        return this;
    }

    /**
     * C type : TCHAR[32]
     */
    @Array({32})
    @Field(1)
    public Pointer<Byte> title() {
        return this.io.getPointerField(this, 1);
    }

    @Field(2)
    public int version() {
        return this.io.getIntField(this, 2);
    }

    @Field(2)
    public NUR_ETHDEV_CONFIG version(int version) {
        this.io.setIntField(this, 2, version);
        return this;
    }

    /**
     * C type : BYTE[4]
     */
    @Array({4})
    @Field(3)
    public Pointer<Byte> ip() {
        return this.io.getPointerField(this, 3);
    }

    /**
     * C type : BYTE[4]
     */
    @Array({4})
    @Field(4)
    public Pointer<Byte> mask() {
        return this.io.getPointerField(this, 4);
    }

    /**
     * C type : BYTE[4]
     */
    @Array({4})
    @Field(5)
    public Pointer<Byte> gw() {
        return this.io.getPointerField(this, 5);
    }

    @Field(6)
    public byte addrType() {
        return this.io.getByteField(this, 6);
    }

    @Field(6)
    public NUR_ETHDEV_CONFIG addrType(byte addrType) {
        this.io.setByteField(this, 6, addrType);
        return this;
    }

    /**
     * C type : BYTE[4]
     */
    @Array({4})
    @Field(7)
    public Pointer<Byte> staticip() {
        return this.io.getPointerField(this, 7);
    }

    /**
     * C type : BYTE[6]
     */
    @Array({6})
    @Field(8)
    public Pointer<Byte> mac() {
        return this.io.getPointerField(this, 8);
    }

    @Field(9)
    public int serverPort() {
        return this.io.getIntField(this, 9);
    }

    @Field(9)
    public NUR_ETHDEV_CONFIG serverPort(int serverPort) {
        this.io.setIntField(this, 9, serverPort);
        return this;
    }

    @Field(10)
    public byte hostmode() {
        return this.io.getByteField(this, 10);
    }

    @Field(10)
    public NUR_ETHDEV_CONFIG hostmode(byte hostmode) {
        this.io.setByteField(this, 10, hostmode);
        return this;
    }

    /**
     * C type : BYTE[4]
     */
    @Array({4})
    @Field(11)
    public Pointer<Byte> hostip() {
        return this.io.getPointerField(this, 11);
    }

    @Field(12)
    public int hostPort() {
        return this.io.getIntField(this, 12);
    }

    @Field(12)
    public NUR_ETHDEV_CONFIG hostPort(int hostPort) {
        this.io.setIntField(this, 12, hostPort);
        return this;
    }

    /**
     * C type : BYTE[8]
     */
    @Array({8})
    @Field(13)
    public Pointer<Byte> reserved() {
        return this.io.getPointerField(this, 13);
    }
}
