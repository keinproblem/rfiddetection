package nurapi;

import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

/**
 * Contains WLAN network scan result information. (single item)
 * <br>
 *
 * @sa NurApiWLanScanEnable<br>
 * <i>native declaration : nur_sdk-master\native\include\NurAPI.h:666</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("NurApi")
public class NUR_WLAN_SCAN_RESULT extends StructObject {
    static {
        BridJ.register();
    }

    public NUR_WLAN_SCAN_RESULT() {
        super();
    }

    public NUR_WLAN_SCAN_RESULT(Pointer pointer) {
        super(pointer);
    }

    /**
     * < Index. 0=first item.
     */
    @Field(0)
    public byte index() {
        return this.io.getByteField(this, 0);
    }

    /**
     * < Index. 0=first item.
     */
    @Field(0)
    public NUR_WLAN_SCAN_RESULT index(byte index) {
        this.io.setByteField(this, 0, index);
        return this;
    }

    /**
     * < SSID of target AP<br>
     * C type : TCHAR[32]
     */
    @Array({32})
    @Field(1)
    public Pointer<Byte> ssid() {
        return this.io.getPointerField(this, 1);
    }

    /**
     * < MAC of target AP<br>
     * C type : BYTE[6]
     */
    @Array({6})
    @Field(2)
    public Pointer<Byte> mac() {
        return this.io.getPointerField(this, 2);
    }

    /**
     * < Security type: Open,WEP WPA1, WPA2
     */
    @Field(3)
    public byte secType() {
        return this.io.getByteField(this, 3);
    }

    /**
     * < Security type: Open,WEP WPA1, WPA2
     */
    @Field(3)
    public NUR_WLAN_SCAN_RESULT secType(byte secType) {
        this.io.setByteField(this, 3, secType);
        return this;
    }

    /**
     * < RSSI
     */
    @Field(4)
    public byte rssi() {
        return this.io.getByteField(this, 4);
    }

    /**
     * < RSSI
     */
    @Field(4)
    public NUR_WLAN_SCAN_RESULT rssi(byte rssi) {
        this.io.setByteField(this, 4, rssi);
        return this;
    }

    /**
     * < Reserved<br>
     * C type : BYTE[10]
     */
    @Array({10})
    @Field(5)
    public Pointer<Byte> reserved() {
        return this.io.getPointerField(this, 5);
    }
}
