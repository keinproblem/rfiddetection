package nurapi;

import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

/**
 * NUR_READERINFO holds information about connected module.
 * <br>
 *
 * @sa NurApiGetReaderInfo()<br>
 * <i>native declaration : nur_sdk-master\native\include\NurAPI.h:194</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("NurApi")
public class NUR_READERINFO extends StructObject {
    static {
        BridJ.register();
    }

    public NUR_READERINFO() {
        super();
    }

    public NUR_READERINFO(Pointer pointer) {
        super(pointer);
    }

    /**
     * < Module serial number.<br>
     * C type : TCHAR[32]
     */
    @Array({32})
    @Field(0)
    public Pointer<Byte> serial() {
        return this.io.getPointerField(this, 0);
    }

    /**
     * < Alternative manufacturer serial number.<br>
     * C type : TCHAR[32]
     */
    @Array({32})
    @Field(1)
    public Pointer<Byte> altSerial() {
        return this.io.getPointerField(this, 1);
    }

    /**
     * < Module name.<br>
     * C type : TCHAR[32]
     */
    @Array({32})
    @Field(2)
    public Pointer<Byte> name() {
        return this.io.getPointerField(this, 2);
    }

    /**
     * < FCC ID.<br>
     * C type : TCHAR[48]
     */
    @Array({48})
    @Field(3)
    public Pointer<Byte> fccId() {
        return this.io.getPointerField(this, 3);
    }

    /**
     * < Hardware version identifier.<br>
     * C type : TCHAR[16]
     */
    @Array({16})
    @Field(4)
    public Pointer<Byte> hwVersion() {
        return this.io.getPointerField(this, 4);
    }

    /**
     * < Software major version number.
     */
    @Field(5)
    public int swVerMajor() {
        return this.io.getIntField(this, 5);
    }

    /**
     * < Software major version number.
     */
    @Field(5)
    public NUR_READERINFO swVerMajor(int swVerMajor) {
        this.io.setIntField(this, 5, swVerMajor);
        return this;
    }

    /**
     * < Software minor version number.
     */
    @Field(6)
    public int swVerMinor() {
        return this.io.getIntField(this, 6);
    }

    /**
     * < Software minor version number.
     */
    @Field(6)
    public NUR_READERINFO swVerMinor(int swVerMinor) {
        this.io.setIntField(this, 6, swVerMinor);
        return this;
    }

    /**
     * < Software development build identifier.
     */
    @Field(7)
    public byte devBuild() {
        return this.io.getByteField(this, 7);
    }

    /**
     * < Software development build identifier.
     */
    @Field(7)
    public NUR_READERINFO devBuild(byte devBuild) {
        this.io.setByteField(this, 7, devBuild);
        return this;
    }

    /**
     * < Number of GPIO's available on module.
     */
    @Field(8)
    public int numGpio() {
        return this.io.getIntField(this, 8);
    }

    /**
     * < Number of GPIO's available on module.
     */
    @Field(8)
    public NUR_READERINFO numGpio(int numGpio) {
        this.io.setIntField(this, 8, numGpio);
        return this;
    }

    /**
     * < Number of sensors available on module.
     */
    @Field(9)
    public int numSensors() {
        return this.io.getIntField(this, 9);
    }

    /**
     * < Number of sensors available on module.
     */
    @Field(9)
    public NUR_READERINFO numSensors(int numSensors) {
        this.io.setIntField(this, 9, numSensors);
        return this;
    }

    /**
     * < Number of regions available on module.
     */
    @Field(10)
    public int numRegions() {
        return this.io.getIntField(this, 10);
    }

    /**
     * < Number of regions available on module.
     */
    @Field(10)
    public NUR_READERINFO numRegions(int numRegions) {
        this.io.setIntField(this, 10, numRegions);
        return this;
    }

    /**
     * < Number of enabled antennas on module.
     */
    @Field(11)
    public int numAntennas() {
        return this.io.getIntField(this, 11);
    }

    /**
     * < Number of enabled antennas on module.
     */
    @Field(11)
    public NUR_READERINFO numAntennas(int numAntennas) {
        this.io.setIntField(this, 11, numAntennas);
        return this;
    }

    /**
     * < Number of maximum antennas on reader.
     */
    @Field(12)
    public int maxAntennas() {
        return this.io.getIntField(this, 12);
    }

    /**
     * < Number of maximum antennas on reader.
     */
    @Field(12)
    public NUR_READERINFO maxAntennas(int maxAntennas) {
        this.io.setIntField(this, 12, maxAntennas);
        return this;
    }
}
