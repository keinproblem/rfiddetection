package nurapi;

import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

/**
 * Contains authentication command response to the authentication (tag's reply if present).
 * <br>
 *
 * @ NurApiGen2v2Authenticate32<br>
 * <i>native declaration : nur_sdk-master\native\include\NurAPI.h:592</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("NurApi")
public class NUR_AUTHENTICATE_RESP extends StructObject {
    static {
        BridJ.register();
    }

    public NUR_AUTHENTICATE_RESP() {
        super();
    }

    public NUR_AUTHENTICATE_RESP(Pointer pointer) {
        super(pointer);
    }

    /**
     * < The operation status: 0 = OK, 1 = no response, 2 = tag error reply, -1 = not present (API error returned).
     */
    @Field(0)
    public int status() {
        return this.io.getIntField(this, 0);
    }

    /**
     * < The operation status: 0 = OK, 1 = no response, 2 = tag error reply, -1 = not present (API error returned).
     */
    @Field(0)
    public NUR_AUTHENTICATE_RESP status(int status) {
        this.io.setIntField(this, 0, status);
        return this;
    }

    /**
     * < Initilaized to -1 = not present. Other values indicate tag's error reply code.
     */
    @Field(1)
    public int tagError() {
        return this.io.getIntField(this, 1);
    }

    /**
     * < Initilaized to -1 = not present. Other values indicate tag's error reply code.
     */
    @Field(1)
    public NUR_AUTHENTICATE_RESP tagError(int tagError) {
        this.io.setIntField(this, 1, tagError);
        return this;
    }

    /**
     * < Number of bits received from the tag.
     */
    @Field(2)
    public int bitLength() {
        return this.io.getIntField(this, 2);
    }

    /**
     * < Number of bits received from the tag.
     */
    @Field(2)
    public NUR_AUTHENTICATE_RESP bitLength(int bitLength) {
        this.io.setIntField(this, 2, bitLength);
        return this;
    }

    /**
     * < The tag's reply in whole.<br>
     * C type : BYTE[1008 / 8]
     */
    @Array({1008 / 8})
    @Field(3)
    public Pointer<Byte> reply() {
        return this.io.getPointerField(this, 3);
    }
}
