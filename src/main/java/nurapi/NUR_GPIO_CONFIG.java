package nurapi;

import org.bridj.BridJ;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

/**
 * Module GPIO configuration.
 * <br>
 *
 * @sa NurApiSetGPIOConfig(), NurApiGetGPIOConfig(), NUR_GPIO_ENTRY<br>
 * <i>native declaration : nur_sdk-master\native\include\NurAPI.h:254</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("NurApi")
public class NUR_GPIO_CONFIG extends StructObject {
    static {
        BridJ.register();
    }

    public NUR_GPIO_CONFIG() {
        super();
    }

    public NUR_GPIO_CONFIG(Pointer pointer) {
        super(pointer);
    }

    /**
     * < Number of entries filled.
     */
    @Field(0)
    public int count() {
        return this.io.getIntField(this, 0);
    }

    /**
     * < Number of entries filled.
     */
    @Field(0)
    public NUR_GPIO_CONFIG count(int count) {
        this.io.setIntField(this, 0, count);
        return this;
    }

    /**
     * < Configuration entries. Each entry represents one GPIO in module.<br>
     * C type : NUR_GPIO_ENTRY[(8)]
     */
    @Array({8})
    @Field(1)
    public Pointer<NUR_GPIO_ENTRY> entries() {
        return this.io.getPointerField(this, 1);
    }
}
